<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Compute Rolling Upgrades on Cray System Management (CSM)</title>
    <link>/docs-csm/en-10/operations/compute_rolling_upgrades/</link>
    <description>Recent content in Compute Rolling Upgrades on Cray System Management (CSM)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 21 May 2022 03:10:46 +0000</lastBuildDate><atom:link href="/docs-csm/en-10/operations/compute_rolling_upgrades/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Troubleshoot A Failed CRUS Session Because Of Bad Parameters</title>
      <link>/docs-csm/en-10/operations/compute_rolling_upgrades/troubleshoot_a_failed_crus_session_due_to_bad_parameters/</link>
      <pubDate>Sat, 21 May 2022 03:09:55 +0000</pubDate>
      
      <guid>/docs-csm/en-10/operations/compute_rolling_upgrades/troubleshoot_a_failed_crus_session_due_to_bad_parameters/</guid>
      <description>Troubleshoot a Failed CRUS Session Because of Bad Parameters A CRUS session must be deleted and recreated if it does not start or complete because of parameters having incorrect values.
The following are examples of incorrect parameters:
 Choosing the wrong Boot Orchestration Service (BOS) session template. Choosing the wrong group labels. Improperly defined BOS session template. For example, specifying nodes in the template instead of using the label of the upgrading group.</description>
    </item>
    
    <item>
      <title>Troubleshoot A Failed CRUS Session Because Of Unmet Conditions</title>
      <link>/docs-csm/en-10/operations/compute_rolling_upgrades/troubleshoot_a_failed_crus_session_due_to_unmet_conditions/</link>
      <pubDate>Sat, 21 May 2022 03:09:55 +0000</pubDate>
      
      <guid>/docs-csm/en-10/operations/compute_rolling_upgrades/troubleshoot_a_failed_crus_session_due_to_unmet_conditions/</guid>
      <description>Troubleshoot a Failed CRUS Session Because of Unmet Conditions If a CRUS session has any unmet conditions, adding or fixing them will cause the session to continue from wherever it got stuck. Updating other parts of the system to meet the required conditions of a CRUS session will unblock the upgrade session.
The following are examples of unmet conditions:
 Undefined groups in the Hardware State Manager (HSM). No predefined Boot Orchestration Service (BOS) session template exists that describes the desired states of the nodes being upgraded.</description>
    </item>
    
    <item>
      <title>Troubleshoot Nodes Failing To Upgrade In A CRUS Session</title>
      <link>/docs-csm/en-10/operations/compute_rolling_upgrades/troubleshoot_nodes_failing_to_upgrade_in_a_crus_session/</link>
      <pubDate>Sat, 21 May 2022 03:09:55 +0000</pubDate>
      
      <guid>/docs-csm/en-10/operations/compute_rolling_upgrades/troubleshoot_nodes_failing_to_upgrade_in_a_crus_session/</guid>
      <description>Troubleshoot Nodes Failing to Upgrade in a CRUS Session Troubleshoot compute nodes failing to upgrade during a Compute Rolling Upgrade Service (CRUS) session and rerun the session on the failed nodes.
When a nodes are marked as failed they are added to the failed node group associated with the upgrade session, and the nodes are marked as down in the workload manager (WLM). If the WLM supports some kind of reason string, that string contains the cause of the down status.</description>
    </item>
    
    <item>
      <title>Upgrade Compute Nodes With CRUS</title>
      <link>/docs-csm/en-10/operations/compute_rolling_upgrades/upgrade_compute_nodes_with_crus/</link>
      <pubDate>Sat, 21 May 2022 03:09:55 +0000</pubDate>
      
      <guid>/docs-csm/en-10/operations/compute_rolling_upgrades/upgrade_compute_nodes_with_crus/</guid>
      <description>Upgrade Compute Nodes with CRUS Upgrade a set of compute nodes with the Compute Rolling Upgrade Service (CRUS). Manage the workload management status of nodes and quiesce each node before taking the node out of service and upgrading it. Then reboot it into the upgraded state and return it to service within the workload manager (WLM).
Prerequisites  The Cray command line interface (CLI) tool is initialized and configured on the system.</description>
    </item>
    
    <item>
      <title>Compute Rolling Upgrades</title>
      <link>/docs-csm/en-10/operations/compute_rolling_upgrades/compute_rolling_upgrades/</link>
      <pubDate>Sat, 21 May 2022 03:09:54 +0000</pubDate>
      
      <guid>/docs-csm/en-10/operations/compute_rolling_upgrades/compute_rolling_upgrades/</guid>
      <description>Compute Rolling Upgrades The Compute Rolling Upgrade Service (CRUS) upgrades sets of compute nodes without requiring an entire set of nodes to be out of service at once. CRUS manages the workload management status of nodes, handling each of the following steps required to upgrade compute nodes:
 Quiesce each node before taking the node out of service. Upgrade the node. Reboot the node into the upgraded state. Return the node to service within its respective workload manager.</description>
    </item>
    
    <item>
      <title>CRUS Workflow</title>
      <link>/docs-csm/en-10/operations/compute_rolling_upgrades/crus_workflow/</link>
      <pubDate>Sat, 21 May 2022 03:09:54 +0000</pubDate>
      
      <guid>/docs-csm/en-10/operations/compute_rolling_upgrades/crus_workflow/</guid>
      <description>CRUS Workflow The following workflow is intended to be a high-level overview of how to upgrade compute nodes. This workflow depicts how services interact with each other during the compute node upgrade process, and helps to provide a quicker and deeper understanding of how the system functions.
Upgrade Compute Nodes Use Cases: Administrator upgrades select compute nodes (around 500) to a newer compute image by using Compute Rolling Upgrade Service (CRUS).</description>
    </item>
    
  </channel>
</rss>
